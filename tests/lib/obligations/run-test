#!/bin/bash --

set -e -u -o pipefail

function usage() {
  cat 2>&1 <<EOF
Usage: $0 <testdir>
Run an [fe ob check] end-to-end test using the test packaged up in <testdir>.
Output (stdout and stderr) is compared with <testdir>/expected-report. Exit
status indicates whether or not the generated output matches the expected
report.
EOF
exit 1
}

if [ "$#" != 1 ] ; then
  usage
  fi

testdir="$1"
if [ ! -d "$testdir" ] ; then
  echo "<testdir> argument is not a directory: $testdir" 2>&1
  usage
  fi

if [ ! -d "$testdir/repo" ]; then
  echo "test directory $testdir has no repo subdirectory." 2>&1
  exit 1
fi

if [ ! -r "$testdir/expected-report" ]; then
  echo "Test directory ($testdir)'s expected-report file unreadable or nonexistent." 2>&1
  exit 1
fi

test -d scratch || mkdir scratch
scratch=scratch/`basename $testdir`

# Instantiate the repo.
cp -r "$testdir/repo" "$scratch"
(
    cd "$scratch"
    prepare_sample_repo
    hg -q init
    hg -q add .
    export DONT_LOAD_ANY_HGRC=1
    hg -q commit -m "initializing test repo"
    fe obligations report 2>&1 || true
) |& diff -u "$testdir/expected-report" -

# Use this to regenerate the tests.
# ) |& cat >"$testdir/expected-report"
